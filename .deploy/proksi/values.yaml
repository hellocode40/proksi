# Default values for proksi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  registry: ghcr.io
  repository: snapp-incubator/proksi
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.3.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  containerPort: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 800m
    memory: 400Mi
    ephemeral-storage: 1Gi
  requests:
    cpu: 800m
    memory: 400Mi
    ephemeral-storage: 1Gi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 12
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Configs
# Storage backend type: "elasticsearch" or "stdout"
# Use "stdout" to output JSON logs directly to stdout instead of Elasticsearch
storageType: "stdout"

elasticsearch:
  addresses: ["http://elastic-http:9200"]
  username: ""
  password: ""

upstreams:
  main:
    url: "http://localhost:8080"
  test:
    url: "http://localhost:8081"

worker:
  count: 50
  queueSize: 2048

skipJsonPaths: []

testProbability: 100

logResponsePayload: true

compareHeaders: false

# New per-route configuration
globalConfig:
  compareHeaders: true
  skipHeaders: ["Date", "Server"]
  storeReqBody: false
  storeRespBodies: true
  skipJsonPaths: []
  testProbability: 100

skipRoutes:
  - "GET:/health"
  - "*:/metrics"

routeConfigs: {}
  # Example route configurations:
  # "POST:/api/v1/cities":
  #   compareHeaders: false
  #   storeReqBody: true
  # "GET:/api/v1/users/*":
  #   skipHeaders: ["Authorization"]
  #   testProbability: 50

metrics:
  enabled: true
  containerPort: 9001
  podMonitor:
    enabled: true
    interval: "10s"
